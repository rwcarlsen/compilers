
void newline(int num) {
  int i;
  i = 0;
  while (i < num) {
    i++;
    printf("\n");
  }
}

void printx(int x) {
  printf("x=");
  printf("%d", x);
  newline(1);
}

void printfoo(double x) {
  printf("foo=");
  printf("%f", x);
  newline(1);
}

void printxyz(int x, int y, int z) {
  printf("x=");
  printf("%d", x);
  printf(", y=");
  printf("%d", y);
  printf(", z=");
  printf("%d", z);
  newline(1);
}

void assignAndUnaryOps() {
  int x;
  int y;
  int z;

  printf("///////// assignment and unary operations ///////\n");

  x = 0;
  y = 0;
  z = 0;
  printxyz(x, y, z);

  x = -3;
  printxyz(x, y, z);

  y = x++;
  printxyz(x, y, z);

  z = !x;
  printxyz(x, y, z);

  z = !z;
  printxyz(x, y, z);

  printxyz(x++, y, z);
  printxyz(x, y, z);
  printxyz(x--, y, z);
  printxyz(x, y, z);
}

void arithmeticOps() {
  int x;
  int y;
  int z;

  printf("/////// ++, --, and arithmetic ////////\n");
  x = 1;
  y = 2;
  z = 0;
  printxyz(x, y, z);

  z = x++ + y;
  printf("z = x++ + y;");
  newline(1);

  printxyz(x, y, z);

  z = x++ - y;
  printf("z = x++ - y;");
  newline(1);

  printxyz(x, y, z);

  z = x++ - y--;
  printf("z = x++ - y--;");
  newline(1);

  printxyz(x, y, z);

  z = x++ * (y++ + 1);
  printf("z = x++ * (y++ + 1);");
  newline(1);

  printxyz(x, y, z);

  z = x++ / y;
  printf("z = x++ / y;");
  newline(1);

  printxyz(x, y, z);
}

void comparisonOps() {
  int x;
  int y;
  int z;

  printf("////// comparison ops //////////\n");
  x = 1;
  y = 2;
  z = 1;
  printxyz(x, y, z);

  printf("x == y: ");
  printf("%d", x == y);
  newline(1);

  printf("x == z: ");
  printf("%d", x == z);
  newline(1);

  printf("x != y: ");
  printf("%d", x != y);
  newline(1);

  printf("x != z: ");
  printf("%d", x != z);
  newline(1);

  printf("!(x != z): ");
  printf("%d", !(x != z));
  newline(1);

  printf("x < y: ");
  printf("%d", x < y);
  newline(1);

  printf("x < z: ");
  printf("%d", x < z);
  newline(1);

  printf("y > x: ");
  printf("%d", y > x);
  newline(1);

  printf("x > z: ");
  printf("%d", x > z);
  newline(1);

  printf("x <= z: ");
  printf("%d", x <= z);
  newline(1);

  printf("y <= x: ");
  printf("%d", y <= x);
  newline(1);

  printf("z >= x: ");
  printf("%d", z >= x);
  newline(1);

  printf("x >= y: ");
  printf("%d", x >= y);
  newline(1);

}

void simpleStatements() {
  int x;
  double foo;

  printf("////// stmts other than call/return //////////\n");
  x = 2;
  printx(x);

  x++;
  printf("x++; ");
  printx(x);

  x--;
  printf("x--; ");
  printx(x);

  ++x;
  printf("++x; ");
  printx(x);

  --x;
  printf("--x; ");
  printx(x);

  scanf("%d", &x);
  printf("scanf(\"%d\", &x); ");
  printx(x);

  scanf("%f", &foo);
  printf("scanf(\"%f\", &foo); ");
  printfoo(foo);
}

void logicalOps() {
  int x;
  int y;
  int z;

  printf("////// And and OR logical operators //////////\n");
  x = 1;
  y = 1;
  z = 0;
  printxyz(x, y, z);

  printf("x && y: ");
  printf("%d", x && y);
  newline(1);

  printf("z && x++: ");
  printf("%d", z && x++);
  printf(", x=");
  printf("%d", x);
  newline(1);

  printf("x && z++: ");
  printf("%d", x && z++);
  printf(", z=");
  printf("%d", z);
  newline(1);

  x = 0;
  y = 0;
  z = 1;
  printxyz(x, y, z);

  printf("x || y: ");
  printf("%d", x || y);
  newline(1);

  printf("z || x++: ");
  printf("%d", z || x++);
  printf(", x=");
  printf("%d", x);
  newline(1);

  printf("x || z++: ");
  printf("%d", x || z++);
  printf(", z=");
  printf("%d", z);
  newline(1);
}

void ifStmts() {
  int x;
  int y;
  int z;

  printf("////// If statements //////////\n");
  x = 0;
  y = 0;
  z = 1;
  printxyz(x, y, z);

  if (x == y) {
    printf("yes: x == y");
    newline(1);
  }
  if (x == z) {
    printf("this test failed!!!!!!!!!!!");
    newline(1);
  }

  printf("////// If-Else statements //////////\n");
  if (x == y) {
    printf("inside if block: x == y\n");
  } else {
    printf("this test failed!!!!!!!!!!!\n");
  }

  if (x == z) {
    printf("this test failed!!!!!!!!!!!\n");
  } else {
    printf("inside else block: x != z\n");
  }
  return;
}

void loops() {
  int x;
  int y;
  int z;

  printf("////// While loops /////////\n");
  x = 0;
  y = 4;
  printxyz(x, y, z);

  while (x == y) {
    printf("this test failed!!!!!!!!!!!\n");
  }

  printf("while x < 7; x++\n");
  while (x < 7) {
    x++;
    printx(x);
  }
}

int pow(int x, int e) {
  int i;
  int result;
  result = x;

  i = 1;
  while (i < e) {
    i++;
    result = result * x;
  }
  return result;
}

int recurse(int x, int e, int i) {
  if (i == e) {
    return x;
  }
  printf("recursing... i=");
  printf("%d", i);
  newline(1);
  return x * recurse(x, e, i + 1);
}

int recursepow(int x, int e) {
  if (e == 0) {
    return 1;
  }
  return recurse(x, e, 1);
}

void funcCalls() {
  int x;

  printf("////////// function calls /////////\n");

  x = pow(2, 10);
  printx(x);

  x = recursepow(2, 10);
  printx(x);
}

void main() {
  assignAndUnaryOps();
  arithmeticOps();
  comparisonOps();
  simpleStatements();
  logicalOps();
  ifStmts();
  loops();
  funcCalls();
  funcCalls();
  return;
}

